# DO NOT alter this file directly
#
# If you want to override options, either create a local copy called
# config.ini in the directory where pynbody is installed, create a local
# copy called .pynbodyrc in your home directory, or a local copy called
# config.ini in the directory where you are running pynbody.

[general]
verbose: False
snap-class-priority: RamsesSnap, GrafICSnap, NchiladaSnap, GadgetSnap, GadgetHDFSnap, SubFindHDFSnap, TipsySnap, AsciiSnap
halo-class-priority: GrpCatalogue, AmigaGrpCatalogue, RockstarCatalogue, AHFCatalogue, SubfindCatalogue

centering-scheme: ssc

threading: True
number_of_threads: -1
# -1 above indicates to detect the number of processors

gravity_calculation_mode: direct_omp

disk-fit-function: expsech

# The following section defines the families in the format
#    main_name: alias1, alias2, ...
#
# To add your own families, just add lines like this to
# your own local copy.
#
# Note that the alias list can be blank, i.e. if you want
# no aliases for particle family 'main_name', write:
#   main_name:
#

[families]
dm: d, dark
star: stars, st, s
gas: g
neutrino: n, neu

[sph]
smooth-particles: 32
tree-leafsize: 16

# Note that all smooths are now threaded according to number_of_threads
# in [general] above. The algorithm is now exact.

# This switches on threading for rendering images. There is unlikely to be
# any reason you'd want to turn this off except for testing.
threaded-image: True

# This switches on an approximate rendering algorithm that
# slightly degrades quality but radically speeds things up (especially
# for projected images).
approximate-fast-images: True


[gadgethdf-type-mapping]
gas: PartType0
dm: PartType1
star: PartType4


[gadgethdf-name-mapping]
Coordinates: pos
Velocity: vel
ParticleIDs: iord
Masses: mass
Mass: mass
Temperature: temp
Metallicity: metals
SmoothedMetallicity: smetals
Density: rho
SmoothingLength: smooth
StellarFormationTime: tform
Potential: phi
ElementAbundance/Iron: Fe
ElementAbundance/Silicon: Si
ElementAbundance/Magnesium: Mg
ElementAbundance/Oxygen: O
ElementAbundance/Neon: Ne
ElementAbundance/Hydrogen: H
ElementAbundance/Helium: He
ElementAbundance/Carbon: C
ElementAbundance/Nitrogen: N

[default-cosmology]
# from Planck+WP+highL+BAO, 1303.5076 Table 5
a: 1.0
h: 0.6777
ns: 0.96
running: 0.0
omegaL0: 0.691
omegaM0: 0.309
omegaB0: 0.0482
sigma8: 0.8288

[default-array-dimensions]
pos: cm
vel: cm s^-1
eps: cm
phi: cm^2 s^-2
accg: cm s^-2
mass: kg
temp: K
rho: kg cm^-3
den: kg cm^-3
smooth: cm
tform: s
HI: 1
HeI: 1
HeII: 1
FeMassFrac: 1
OxMassFrac: 1
coolontime: s
p: Pa
u: km^2 s^-2
massform: kg

[tipsy]
binary-int-arrays: iord, igasorder, grp

[gadget-type-mapping]
gas: 0
dm: 1,5
star: 2,3,4

[gadget-name-mapping]
HSML: smooth
ID: iord

[gadget-1-blocks]
# The default block order for Gadget-1 files.
# Not all blocks need be present
blocks=HEAD,POS,VEL,ID,MASS,U,NH,NHE,HSML,SFR

[nchilada-name-mapping]
# this maps the nchilada XML names (not filenames) to pynbody names
position: pos
potential: phi
smoothlength: smooth
temperature: temp
GasDensity: rho

[ramses]
# The default particle blocks for RAMSES files
particle-blocks=x,y,z,vx,vy,vz,mass,iord,level,age,metal
particle-format=f8,f8,f8,f8,f8,f8,f8,i4,i4,f8,f8

# particle-distinguisher indicates the particle block which is non-zero for stars (0-based, so 9=age by default)
particle-distinguisher=9,f8

# hydro-blocks in 3D. Anything ending in z will be removed for 2D snapshots.
hydro-blocks=rho,vx,vy,vz,p,metal
gravity-blocks=phi,accg_x,accg_y,accg_z


# The following flag lets RamsesSnaps be read by multiple threads.
# If parallel_read>=2, that is the number of workers used to read
# a file. If parallel_read<=1, single threading is used.
#
# To use more than one thread you have to first install the posix_ipc
# module. This is quick and easy - just type easy_install posix_ipc from
# your shell.
parallel-read=8

# specify the locations of RAMSES utilities -- obtain from
# https://bitbucket.org/rteyssie/ramses
ramses_utils = $HOME/ramses/trunk/ramses/utils/



[gadget-default-output]
# Gadget files have no intrinsic set of fields, so this defines a
# default set and an ordering too (in terms of the pynbody names,
# not the gadget block names)
all = pos, vel
gas = u, nh, nhe, smooth, sfr
# Any arrays not mentioned in the field ordering below will be
# tacked on the end of the file in an unspecified order
field-ordering = pos, vel, iord, mass, u, nh, nhe, smooth, sfr

[gadget-units]
# The default units for Gadget files. Note that Gadget-HDF files
# store unit information so this is only used for old-style
# Gadget binary files.
#
# Cosmological dependencies (a and h) will be stripped out for non-
# cosmological runs.
vel: km s^-1 a^1/2
pos: kpc h^-1
mass: 1e10 Msol h^-1

[tipsy-default-output]
# Tipsy files come with a default set of fields which will be written
# so this just specifies any extra arrays to be written out

[irreducible-units]
# This defines the irreducible units, which cannot be expressed in
# terms of anything more basic. We include in this cosmological
# quantities 'a' and 'h' which are typically substituted for numerical
# values at some point in the calculation.
names: m, s, kg, K, a, h, aform, rad

[named-units]
# The next section defines the named units which are derived from the
# above irreducible units. The file is processed sequentially so that
# later entries can refer to previous named units.

# Times
yr: 3.1556926e7 s
kyr: 1000 yr
Myr: 1000 kyr
Gyr: 1000 Myr
Hz: s^-1
kHz: 1e3 Hz
MHz: 1e6 Hz
GHz: 1e9 Hz
THz: 1e12 Hz

# Distances
angst: 1e-10 m
cm: 0.01 m
mm: 1e-3 m
nm: 1e-9 m
km: 1000 m
au: 1.49598e11 m
pc: 3.08568025e16 m
kpc: 1000 pc
Mpc: 1000 kpc
Gpc: 1000 Mpc

# Solid Angle
sr: rad^2
deg: 0.01745329251 rad
arcmin: 0.01666666666 deg
arcsec: 0.01666666666 arcmin

# Masses
Msol: 1.98892e30 kg
g: 1.0e-3 kg
m_p: 1.67262158e-27 kg
m_e: 9.10938188e-31 kg

# Forces
N: kg m s^-2

# Energies
J: N m
erg: 1.0e-7 J
eV: 1.60217646e-19 J
keV: 1000 eV
MeV: 1000 keV

# Pressures
Pa: J m^-3
dyn: erg cm^-3

# Redshift
(1+z): a^-1

# Helpful physical quantities
k: 1.3806503e-23 J K^-1
c: 299792458 m s^-1
G: 6.67300e-11 m^3 kg^-1 s^-2
hP: 6.626068e-34 m^2 kg s^-1

[units-latex]
# Latex code for typesetting named units.
Msol: M_{\odot}
m_p: m_p
m_e: m_e

[AHFCatalogue]
# settings for the AHF Catalogue reader

AutoRun: True
# automatically attempt to run AHF if no catalogue can be found
# on disk

Path: None
# /path/to/AHF, or None to attempt to find it in your $PATH

AutoGrp: False
# set to true to automatically create a 'grp' array on load
# The grp array

AutoPid: False
# set to true to automatically create a 'pid' array on load
# the PID array is another way to get the particle IDs in the ancestor snapshot,
# but the framework provides h[n].get_index_list(f) for halo catalogue h and
# base snapshot f, so you probably don't need AutoPid


Config:	  [AHF]
	  ic_filename = %(filename)s
	  ic_filetype = %(typecode)d
	  outfile_prefix = %(filename)s
	  LgridDomain = 256
	  LgridMax = %(gridmax)d
	  NperDomCell = 5
	  NperRefCell = 5
	  VescTune = 1.5
	  NminPerHalo = 50
	  RhoVir = 0
	  Dvir = 200
	  MaxGatherRad = 10.0

ConfigTipsy:	  [TIPSY]
	  TIPSY_OMEGA0 = %(omega0)f
	  TIPSY_LAMBDA0 = %(lambda0)f
	  TIPSY_BOXSIZE = %(boxsize)e
	  TIPSY_VUNIT = %(vunit)e
	  TIPSY_MUNIT = %(munit)e
	  TIPSY_EUNIT = %(eunit)e

[RockstarCatalogue]
# settings for the Rockstar Catalogue reader

AutoRun: True
# automatically attempt to run AHF if no catalogue can be found
# on disk

Path: None
# /path/to/rockstar, or None to attempt to find it in your $PATH

AutoGrp: False
# set to true to automatically create a 'grp' array on load
# The grp array

AutoPid: False
# set to true to automatically create a 'pid' array on load
# the PID array is another way to get the particle IDs in the ancestor snapshot,
# but the framework provides h[n].get_index_list(f) for halo catalogue h and
# base snapshot f, so you probably don't need AutoPid


Config:	  FILE_FORMAT = %(format)s
	  PARTICLE_MASS = %(partmass)d
	  SCALE_NOW = %(expfac)f
	  h0 = %(hub)f
	  Om = %(omega0)f
	  Ol = %(lambda0)f
	  TIPSY_LENGTH_CONVERSION = %(boxsize)e
	  TIPSY_VELOCITY_CONVERSION = %(vunit)e
	  TIPSY_MASS_CONVERSION = %(munit)e
	  FORCE_RES = %(softening)e
	  OUTPUT_FORMAT = BINARY

[camb]
# To use CAMB live (e.g. to generate consistent power spectra automatically) you will need
# to compile the default version of CAMB (ini-file driver) and set up the path to the
# executable. Download CAMB here: http://camb.info
path: /path/to/camb

[SubfindHDF]

FoF-ignore: SF, NSF, Stars
Sub-ignore: GrNr, FirstSubOfHalo, SubParentHalo, SubMostBoundID, InertiaTensor, SF, NSF, NsubPerHalo, Stars
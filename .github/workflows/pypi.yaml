name: Push to PyPI

on:
  push:
    tags: v*
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/pypi.yaml'

  workflow_dispatch:


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.buildplat[0] }} ${{ matrix.buildplat[2] }} ${{ matrix.python}}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        # Following numpy's setup
        buildplat:
        - [ubuntu-20.04, manylinux, x86_64, ""]
        - [ubuntu-22.04-arm64, manylinux, aarch64, ""]
        - [macos-13, macosx, x86_64, "/usr/local"]
        - [macos-14, macosx, arm64, "/opt/homebrew"]
        python: ["cp310", "cp311", "cp312"]
    steps:
      - uses: actions/checkout@v4

      - name: Install GCC (Ubuntu)
        if: startsWith(matrix.buildplat[0], 'ubuntu')
        shell: bash
        run: |
          sudo apt-get update -qq
          sudo apt install gcc-10 g++-10
          echo "CC=gcc-10" >> $GITHUB_ENV
          echo "CXX=g++-10" >> $GITHUB_ENV

      - name: Install GCC (MacOS)
        if: startsWith(matrix.buildplat[0], 'macos')
        shell: bash
        run: |
          brew install gcc@13 pipx
          echo "CC=${{matrix.buildplat[3]}}/bin/gcc-13" >> $GITHUB_ENV
          echo "CXX=${{matrix.buildplat[3]}}/bin/g++-13" >> $GITHUB_ENV

      # - name: Determine version tag
      #   if: github.event_name != 'pull_request'
      #   run: |
      #     echo "SETUP_VERSION=`python setup.py --version`" >> $GITHUB_ENV
      #     echo "VERSION_TAG=`git describe --tags | cut -c 2-`" >> $GITHUB_ENV

      # - name: Verify version naming is consistent
      #   if: github.event_name != 'pull_request'
      #   run: |
      #     if [ "${{ env.VERSION_TAG }}" == "${{ env.SETUP_VERSION }}" ]; then
      #         echo Git tag and python setup.py versions match: ${{ env.VERSION_TAG }}
      #     else
      #         echo Version label mismatch
      #         echo Git tag-derived version is ${{ env.VERSION_TAG }}
      #         echo setup.py-derived version is ${{ env.SETUP_VERSION }}
      #         exit 1;
      #     fi

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}_${{ matrix.buildplat[2] }}
          CIBW_ARCHS_MACOS: ${{ matrix.buildplat[2] }}
          CIBW_ARCHS_LINUX: ${{ matrix.buildplat[2] }}

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.python }}-${{ matrix.buildplat[1] }}_${{ matrix.buildplat[2] }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.12'

      - name: Install numpy and cython
        run: python -m "pip" install --pre 'numpy>=2.0.0rc1' cython setuptools

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-source
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: PyPI
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          merge-multiple: true
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.14
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
